@Entity(tableName = "incident_report")
data class IncidentReport(
    @PrimaryKey(autoGenerate = true) val id: Long = 0,
    @ColumnInfo(name = "case_type") val caseType: String,
    @ColumnInfo(name = "incident_date") val incidentDate: String, // Store date as String
    @ColumnInfo(name = "incident_time") val incidentTime: String, // Store time as String
    @ColumnInfo(name = "report_method") val reportMethod: String,
    @ColumnInfo(name = "report_detail") val reportDetail: String,
    @ColumnInfo(name = "police_station") val policeStation: String,
    @ColumnInfo(name = "case_number") val caseNumber: String,
    @ColumnInfo(name = "case_log") val caseLog: String,
    @ColumnInfo(name = "investigator") val investigator: String,
    @ColumnInfo(name = "investigator_phone") val investigatorPhone: String,
    @ColumnInfo(name = "incident_location") val incidentLocation: String,
    @ColumnInfo(name = "owner") val owner: String,
    @ColumnInfo(name = "victim") val victim: String,
    @ColumnInfo(name = "related_other") val relatedOther: String,
    @ColumnInfo(name = "victim_name") val victimName: String,
    @ColumnInfo(name = "victim_age") val victimAge: Int,
    @ColumnInfo(name = "victim_incident_date") val victimIncidentDate: String, // Store as String (Date)
    @ColumnInfo(name = "victim_incident_time") val victimIncidentTime: String, // Store as String (Time)
    @ColumnInfo(name = "officer_incident_date") val officerIncidentDate: String,
    @ColumnInfo(name = "officer_incident_time") val officerIncidentTime: String,
    @ColumnInfo(name = "investigation_date") val investigationDate: String,
    @ColumnInfo(name = "investigation_time") val investigationTime: String,
    @ColumnInfo(name = "additional_investigation_date") val additionalInvestigationDate: String,
    @ColumnInfo(name = "additional_investigation_time") val additionalInvestigationTime: String,
    @ColumnInfo(name = "scene_protection") val sceneProtection: String,
    @ColumnInfo(name = "scene_protection_other") val sceneProtectionOther: String,
    @ColumnInfo(name = "exterior_type") val exteriorType: String,
    @ColumnInfo(name = "building_floors") val buildingFloors: Int,
    @ColumnInfo(name = "fence") val fence: String,
    @ColumnInfo(name = "facing_direction") val facingDirection: String,
    @ColumnInfo(name = "front_adjacent") val frontAdjacent: String,
    @ColumnInfo(name = "left_adjacent") val leftAdjacent: String,
    @ColumnInfo(name = "right_adjacent") val rightAdjacent: String,
    @ColumnInfo(name = "back_adjacent") val backAdjacent: String,
    @ColumnInfo(name = "interior_description") val interiorDescription: String,
    @ColumnInfo(name = "incident_area") val incidentArea: String,
    @ColumnInfo(name = "tools") val tools: String,
    @ColumnInfo(name = "weapon") val weapon: String,
    @ColumnInfo(name = "bondage") val bondage: String,
    @ColumnInfo(name = "danger") val danger: String,
    @ColumnInfo(name = "injury_details") val injuryDetails: String,
    @ColumnInfo(name = "trace_area_1") val traceArea1: String,
    @ColumnInfo(name = "intruder_entry_1") val intruderEntry1: String,
    @ColumnInfo(name = "pry_marks_1") val pryMarks1: String,
    @ColumnInfo(name = "search_traces_1") val searchTraces1: String,
    @ColumnInfo(name = "stolen_property") val stolenProperty: String,
    @ColumnInfo(name = "blood_like_stain") val bloodLikeStain: String,
    @ColumnInfo(name = "hemastix_color_change_green_blue") val hemastixColorChangeGreenBlue: Boolean,
    @ColumnInfo(name = "hemastix_no_change") val hemastixNoChange: Boolean,
    @ColumnInfo(name = "phenolphthalein_color_change_pink") val phenolphthaleinColorChangePink: Boolean,
    @ColumnInfo(name = "phenolphthalein_no_change") val phenolphthaleinNoChange: Boolean,
    @ColumnInfo(name = "other_evidence") val otherEvidence: String,
    @ColumnInfo(name = "fingerprint_evidence") val fingerprintEvidence: String,
    @ColumnInfo(name = "dna_evidence") val dnaEvidence: String,
    @ColumnInfo(name = "toolmark_evidence") val toolmarkEvidence: String,
    @ColumnInfo(name = "other_type_evidence") val otherTypeEvidence: String,
    @ColumnInfo(name = "final_inspection") val finalInspection: Boolean,
    @ColumnInfo(name = "evidence_collected_complete") val evidenceCollectedComplete: Boolean,
    @ColumnInfo(name = "scene_photo_and_handover") val scenePhotoAndHandover: Boolean,
    @ColumnInfo(name = "inspection_completion_date") val inspectionCompletionDate: String,
    @ColumnInfo(name = "inspection_completion_time") val inspectionCompletionTime: String,
    @ColumnInfo(name = "scene_inspection_date") val sceneInspectionDate: String,
    @ColumnInfo(name = "scene_inspection_time") val sceneInspectionTime: String,
    @ColumnInfo(name = "photo_code_from") val photoCodeFrom: String,
    @ColumnInfo(name = "photo_code_to") val photoCodeTo: String,
    @ColumnInfo(name = "photo_total") val photoTotal: Int
)
